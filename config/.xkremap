#!/usr/bin/env ruby
define :activate do |command|
  execute(<<-SHELL)
    while read line; do
      pid="$(echo "$line" | cut -d" " -f4)"
      if [ "x#{command}" = "x$(cat "/proc/${pid}/cmdline")" ]; then
        window_id="$(echo "$line" | cut -d" " -f1)"
        exec wmctrl -i -R "$window_id"
      fi
    done <<< "$(wmctrl -l -p)"

    exec "#{command}"
  SHELL
end

if `hostname` =~ /\AP\d{3}\n\z/ # for work
  remap 'C-o', to: activate('/usr/lib/slack/slack')
else
  remap 'C-o', to: activate('/usr/share/nocturn/Nocturn')
end
remap 'C-u', to: activate('/opt/google/chrome/chrome')
remap 'C-h', to: activate('urxvt')

window class_not: 'urxvt' do
  # emacs-like bindings
  remap 'C-b', to: 'Left'
  remap 'C-f', to: 'Right'
  remap 'C-p', to: 'Up'
  remap 'C-n', to: 'Down'

  remap 'M-b', to: 'Ctrl-Left'
  remap 'M-f', to: 'Ctrl-Right'

  remap 'C-a', to: 'Home'
  remap 'C-e', to: 'End'

  remap 'C-k', to: ['Shift-End', 'Ctrl-x']

  remap 'C-d', to: 'Delete'
  remap 'M-d', to: 'Ctrl-Delete'

  # actually these are vim insert mode bindings, but compatible with shell
  remap 'C-w', to: ['Ctrl-Shift-Left', 'Ctrl-x']

  %w[a z x c v w t l].each do |key|
    remap "Alt-#{key}", to: "C-#{key}"
  end

  remap 'Alt-o', to: 'Ctrl-Shift-Tab'
  remap 'Alt-p', to: 'Ctrl-Tab'
end

window class_only: 'google-chrome' do
  remap "Alt-s", to: "C-f"
end

window class_only: 'slack' do
  remap 'Alt-n', to: 'Ctrl-k'
  remap 'Alt-k', to: 'Alt-Up'
  remap 'Alt-j', to: 'Alt-Down'
  remap 'Ctrl-Alt-k', to: 'Alt-Shift-Up'
  remap 'Ctrl-Alt-j', to: 'Alt-Shift-Down'

  (1..9).each do |i|
    remap "Alt-#{i}", to: "Ctrl-#{i}"
  end
end
