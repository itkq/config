# vi mode
set-window-option -g mode-keys vi

# Prefix
unbind-key C-b
set-option -g prefix C-q

# Arrangement
set-option -g status-justify "centre"

# Basic
# setw -g utf8 on
# set -g status-utf8 on
set -s escape-time 1
set-option -g history-limit 1000000
set-option -g default-shell /bin/zsh
set-option -g base-index 1
setw -g monitor-activity on
set -g visual-activity off
set-option -g renumber-windows on
set-option -g default-terminal screen-256color

# Mouse Controll
set-option -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

bind e setw synchronize-panes on
bind E setw synchronize-panes off
# Key Bindings
# unbind 1
bind-key q kill-pane
bind-key 0 kill-pane
bind-key | split-window -hc "#{pane_current_path}"
bind-key - split-window -vc "#{pane_current_path}"
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"
bind-key j select-pane -D #down
bind-key k select-pane -U #up
bind-key h select-pane -L #left
bind-key l select-pane -R #right
# bind-key < resize-pane -L 14
# bind-key > resize-pane -R 14
bind-key -n ^t select-pane -t:.+
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6

bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5
# bind-key -n M-j switch-client -n \; refresh-client -S
# bind-key -n M-k switch-client -p \; refresh-client -S
unbind s
bind-key s new-window "tmux ls | sed -e 's/:.*\]//g' | peco | cut -d':' -f 1 | xargs tmux switch-client -t"
bind-key -n M-k new-window "tmux ls | peco | cut -d':' -f 1 | xargs tmux kill-session -t"

# Tab change
bind-key -n M-t new-window
bind-key -n M-p previous-window
bind-key -n M-n next-window
bind-key -n M-w kill-window

# copy mode
# bind-key -n M-i copy-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line

# powerline skin
set -g status on
# set -g status-utf8 on
set -g status-interval 2
set -g status-fg colour248
set -g status-bg default

set -g window-style        'fg=colour251,bg=colour236' # white and Grey19
set -g window-active-style 'fg=colour251,bg=colour16' # white and black

# left status
set -g status-left '#[fg=colour76][#(tmux ls | grep -n attached | sed -e "s/:.*$//")/#(tmux ls | wc -l | sed -e "s/ //g")] #S #[default]'
set -g status-left-length 120

# status
set-window-option -g window-status-format " #I: #W "
set-window-option -g window-status-current-format "#[fg=colour76,bold] #I: #W #[default]"

# right status
set -g status-right '#[fg=colour76,bg=default]Batt: #{battery_percentage} #{battery_remain} |  %Y/%m/%d %H:%M'
set -g status-right-length 200

# pane-border
set-option -g pane-border-style bg=brightblack

# pane border
set -g pane-border-style bg=default,fg=colour238
set -g pane-active-border-style bg=default,fg=colour41

# message window skin
set-option -g message-style bg=colour31,fg=brightwhite

# optinal settings
source-file ~/.tmux.conf.local

# To fix initial pane path bug
bind 2 split-window -v -c "#{pane_current_path}"
bind 3 split-window -h -c "#{pane_current_path}"
bind -n M-t new-window -c "#{pane_current_path}"


# C-b C-p Start logging
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# C-b C-o Stop logging
bind-key C-o pipe-pane \; display-message "Logging end."
# C-b v Open new window. Logging always. (-n is set window name.)
bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-logging'
run '~/.tmux/plugins/tpm/tpm'

# tmux-plugins/tmux-battery
set -g @batt_remain_short true
