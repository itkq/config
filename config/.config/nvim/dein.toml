[[plugins]]
repo = 'Shougo/dein.vim'

# ==========================================================
# color
# ==========================================================

[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = '''
syntax on
colorscheme onedark
'''

# ==========================================================
# basic
# ==========================================================

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
let g:NERDCreateDefaultMappings = 0

let g:NERDSpaceDelims = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

nmap <C-c> <Plug>NERDCommenterToggle
vmap <C-c> <Plug>NERDCommenterToggle
'''

[[plugins]]
# Show search result nicely
repo = 'osyo-manga/vim-anzu'
hook_add = '''
nmap n <Plug>(anzu-n-with-echo)
nmap N <Plug>(anzu-N-with-echo)
nmap * <Plug>(anzu-star-with-echo)
nmap # <Plug>(anzu-sharp-with-echo)

nmap <Esc><Esc> <Plug>(anzu-clear-search-status)

set statusline=%{anzu#search_status()}
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
# Enhance to replace
repo = 'osyo-manga/vim-over'
hook_add = '''
nnoremap <silent> <space>r :OverCommandLine<CR>
'''

[[plugins]]
repo = 'houtsnip/vim-emacscommandline'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'

# # ==========================================================
# # linter
# # ==========================================================

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
autocmd! BufWritePost * Neomake

autocmd MyAutoCmd VimEnter * highlight SignColumn ctermbg=237
autocmd MyAutoCmd ColorScheme * hi NeomakeErrorSign cterm=bold ctermfg=255 ctermbg=203
autocmd MyAutoCmd ColorScheme * hi NeomakeWarningSign cterm=bold ctermfg=233 ctermbg=150
autocmd MyAutoCmd ColorScheme * hi NeomakeMessageSign cterm=bold ctermfg=8 ctermbg=150
autocmd MyAutoCmd ColorScheme * hi NeomakeInfoSign cterm=bold ctermfg=8 ctermbg=110

let g:neomake_error_sign = {'text': 'E➤', 'texthl': 'NeomakeErrorSign'}
let g:neomake_warning_sign = {
    \   'text': 'W➤',
    \   'texthl': 'NeomakeWarningSign',
    \ }
let g:neomake_message_sign = {
     \   'text': 'M➤',
     \   'texthl': 'NeomakeMessageSign',
     \ }
let g:neomake_info_sign = {'text': 'ℹ➤', 'texthl': 'NeomakeInfoSign'}

let g:neomake_cpp_enabled_makers = ['gcc']
let g:neomake_javascript_enabled_makers = ['eslint']
let g:neomake_python_enabled_makers = ['python', 'flake8', 'mypy']
'''

# ==========================================================
# powerline
# ==========================================================

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['tagbar', 'vim-fugitive']
hook_add = '''
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.crypt = 'CR'
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.linenr = 'LF'
let g:airline_symbols.linenr = 'NL'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = 'RO'

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#taboo#enabled = 1
'''

[[plugins]]
repo = 'gcmt/taboo.vim'
depends = 'vim-airline'
hook_add = '''
"set guioptions-=e
"set sessionoptions+=tabpages,globals
let g:taboo_tab_format=' t%N %f%m '
let g:taboo_tabline = 0
'''

# # ==========================================================
# # terminal
# # ==========================================================

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
nnoremap <silent> ,rl :TREPLSendLine<cr>
vnoremap <silent> ,rl :TREPLSendSelection<cr>
nnoremap <silent> vt :Ttoggle<cr>
nnoremap <silent> vs :terminal<cr>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-quickrun'


# # ==========================================================
# # git
# # ==========================================================

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_override_sign_column_highlight = 1
hi clear SignColumn
hi SignColumn ctermbg=None
hi clear SignColumn
hi GitGutterAdd ctermfg=green
hi GitGutterChange ctermfg=yellow
hi GitGutterDelete ctermfg=red
hi GitGutterChangeDelete ctermfg=yellow
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

# # ==========================================================
# # others
# # ==========================================================

# [[plugins]]
# repo = 'Yggdroot/indentLine'
# hook_add = '''
# let g:indentLine_color_term = 237
# let g:indentLine_color_gui = '#3c444d'
# let g:indentLine_char = '¦'
# '''

[[plugins]]
repo = 'fuenor/qfixgrep'

# [[plugins]]
# repo = 't9md/vim-quickhl'
# hook_add = '''
# nmap <Space>h <Plug>(quickhl-manual-this)
# xmap <Space>h <Plug>(quickhl-manual-this)
# nmap <Space>H <Plug>(quickhl-manual-reset)
# xmap <Space>H <Plug>(quickhl-manual-reset)
# '''
#
# # [[plugins]]
# # repo = 'rhysd/accelerated-jk'
# # hook_add = '''
# # nmap j <Plug>(accelerated_jk_gj)
# # nmap k <Plug>(accelerated_jk_gk)
# # '''

[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
let g:EasyMotion_do_mapping = 0
nmap s <Plug>(easymotion-s2)
'''

# # ==========================================================
# # ctrlp
# # ==========================================================
#
# # [[plugins]]
# # repo = 'nixprime/cpsm'
#
# [[plugins]]
# repo = 'ctrlpvim/ctrlp.vim'
# # depends = 'cpsm'
# # hook_add = '''
# # # let g:ctrlp_match_func = {'match': 'cpsm#CtrlPMatch'}
# # '''
#
# [[plugins]]
# repo = 'ivalkeen/vim-ctrlp-tjump'
# depends = 'ctrlp.vim'
#
# [[plugins]]
# repo = 'tacahiroy/ctrlp-funky'
# depends = 'ctrlp.vim'
